#!/bin/bash

SCRIPT_DIR="$(dirname $(readlink -f ${BASH_SOURCE[0]}))"

# search for cloud credential
if [ -f $SCRIPT_DIR/secret/.cloud.env ]; then
    source $SCRIPT_DIR/secret/.cloud.env
elif [ -f $HOME/.local/share/vault/.cloud.env ]; then
    source $HOME/.local/share/vault/.cloud.env
elif [ -f $HOME/.cloud.env ]; then
    source $HOME/.cloud.env
else
    echo "Cannot find cloud credential file '.cloud.env'"
    return -1
fi

##########################
#
#       阿里云
#
##########################

env_aliyun() {
    #export MACHINE_DOCKER_INSTALL_URL=http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet

    # ECS_REGION
    #   华北1：cn-qingdao
    #   华北2：cn-beijing
    #   华北3：cn-zhangjiakou
    #   华东1：cn-hangzhou
    #   华东2：cn-shanghai
    #   华南1：cn-shenzhen

    # Optional for VPC only
    #export ECS_VPC_ID=<your_vpc_id>
    #export ECS_VSWITCH_ID=<your_vswitchid>
    cat <<EOF
    export MACHINE_DRIVER=aliyunecs

    export ECS_ACCESS_KEY_ID=${ECS_ACCESS_KEY_ID}
    export ECS_ACCESS_KEY_SECRET=${ECS_ACCESS_KEY_SECRET}
    export ECS_REGION=cn-beijing
    export ECS_SSH_PASSWORD=M3w9iWbaYzkJnjcesaOR
    export ECS_INTERNET_MAX_BANDWIDTH=100
    export ECS_SECURITY_GROUP=fully-open

    # apt-get install -qy linux-image-generic-lts-xenial && reboot
EOF
}


##########################
#
#       AWS
#
##########################

env_aws() {
    # AWS REGION
    #   ap-southeast-2
    # AMI
    # https://cloud-images.ubuntu.com/locator/ec2/
    #   ap-southeast-2	xenial	16.04 LTS	amd64	hvm:ebs-ssd	20160627	ami-a387afc0	hvm
    #   ap-southeast-2	trusty	14.04 LTS	amd64	hvm:ebs-ssd	20160627	ami-396a415a	hvm
    #   ap-southeast-2	xenial	16.04 LTS	amd64	hvm:ebs-ssd	20170811	ami-bb1901d8	hvm
    #   ap-southeast-2	zesty	17.04	amd64	hvm:ebs-ssd	20170811	ami-e41a0287	hvm

    # AWS Instance Type
    #   t2.nano
    #   t2.micro
    #   t2.small
    #   t2.medium
    #   t2.large
    #export AWS_INSTANCE_TYPE=t2.nano

    # AWS Virtual Private Cloud
    #export AWS_VPC_ID=vpc-616ca604

    # AWS Security Group
    #   wild-open   sg-60ba2104
    #   default     sg-d878f8bd
    #export AWS_SECURITY_GROUP=sg-60ba2104

cat <<EOF
    export MACHINE_DRIVER=aws

    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    export AWS_DEFAULT_REGION=ap-southeast-2
    export AWS_AMI=ami-bb1901d8
EOF
}



##########################
#
#       Azure
#
##########################

env_azure() {
    # AZURE_LOCATION
    #   westus        - California    $13.39/month
    #   eastasia      - Hongkong      $13.39/month
    #   australiaeast - Sydney        $17.86/month

    # AZURE_SIZE
    #   Standard_A0 - 768 MB + 20 GB HDD
    #   Standard_A1 - 1.75 GB + 70 GB HDD
    #   Standard_A2 - 3.5 GB + 135 GB HDD

cat <<EOF
    export MACHINE_DRIVER=azure

    export AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
    export AZURE_LOCATION=westus
    export AZURE_SIZE=Standard_A0
EOF
}



##########################
#
#    Digital Ocean
#
##########################

env_digitalocean() {
    # export DIGITALOCEAN_IMAGE=ubuntu-14-04-x64

    # Digtial Ocean Region
    #
    # nyc1    New York 1
    # sgp1    Singapore 1
    # lon1    London 1  
    # nyc3    New York 3
    # ams3    Amsterdam 3
    # fra1    Frankfurt 1
    # tor1    Toronto 1 
    # sfo2    San Francisco 2
    # blr1    Bangalore 1

    # Size
    # s-1vcpu-1gb       1024      1        25      5.00             0.007440
    # s-1vcpu-2gb       2048      1        50      10.00            0.014880
    # s-1vcpu-3gb       3072      1        60      15.00            0.022320
    # s-2vcpu-2gb       2048      2        60      15.00            0.022320
    # s-3vcpu-1gb       1024      3        60      15.00            0.022320
    # s-2vcpu-4gb       4096      2        80      20.00            0.029760
    # s-4vcpu-8gb       8192      4        160     40.00            0.059520

cat <<EOF
    export MACHINE_DRIVER=digitalocean

    export DIGITALOCEAN_ACCESS_TOKEN=${DIGITALOCEAN_ACCESS_TOKEN}
    export DIGITALOCEAN_IMAGE=ubuntu-16-04-x64
    export DIGITALOCEAN_SSH_KEY_FINGERPRINT=${DIGITALOCEAN_SSH_KEY_FINGERPRINT}
    export DIGITALOCEAN_REGION=nyc1
    export DIGITALOCEAN_SIZE=s-1vcpu-1gb
EOF
}



##########################
#
#  Google Compute Engine
#
##########################

GOOGLE_CREDENTIAL_FILE=/tmp/.google_credential.json

env_google() {
    if [ ! -f "$GOOGLE_CREDENTIAL_FILE" ]; then
        echo "${GOOGLE_CREDENTIAL}" > $GOOGLE_CREDENTIAL_FILE
    fi

    cat <<EOF
    export MACHINE_DRIVER=google

    export GOOGLE_PROJECT=potent-bloom-130013
    export GOOGLE_ZONE=us-west1-b

    # f1-micro      - 0.6 GB
    # n1-standard-1 - 3.75 GB
    export GOOGLE_MACHINE_TYPE=f1-micro
    export GOOGLE_MACHINE_IMAGE=https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20161115
    export GOOGLE_DISK_TYPE=pd-ssd # or pd-standard for HDD
    GCE_BASEDIR=$(dirname "$BASH_SOURCE[0]")
    if [ "." = "$GCE_BASEDIR" ]; then
        GCE_BASEDIR=$(dirname $0)
    fi

    if [ -z "$GCE_BASEDIR" ]; then
        echo "GCE_BASEDIR is empty"
        exit 1
    fi

    export GOOGLE_APPLICATION_CREDENTIALS="$GOOGLE_CREDENTIAL_FILE"
EOF
}



##########################
#
#         青云
#
##########################

env_qingcloud() {
cat <<EOF
    export MACHINE_DRIVER=qingcloud

    export QINGCLOUD_ACCESS_KEY_ID=${QINGCLOUD_ACCESS_KEY_ID}
    export QINGCLOUD_SECRET_ACCESS_KEY=${QINGCLOUD_SECRET_ACCESS_KEY}
EOF
}



##########################
#
#       Rackspace
#
##########################

env_rackspace() {
    # OS_IMAGE_ID
    #   Ubuntu 14.04 LTS (PVHVM)  - 7a998601-31bd-48be-9dda-c88e0f68db91
    #   Ubuntu 16.04 LTS (PVHVM)  - 821ba5f4-712d-4ec8-9c65-a3fa4bc500f9
    #   Debian 8 (Jessie) (PVHVM) - 92b07db3-f474-4166-a021-d6e0599bf54f
    #   CentOS 7 (PVHVM)          - 4319b4ff-f887-4c52-9464-34536d202143

    # OS_REGION_NAME
    #   SYD - Sydney
    #   IAD - Northern Virginia

    cat <<EOF
    export MACHINE_DRIVER=rackspace

    export OS_USERNAME=twang2218
    export OS_IMAGE_ID=821ba5f4-712d-4ec8-9c65-a3fa4bc500f9
    export OS_API_KEY=${OS_API_KEY}
    export OS_REGION_NAME=SYD
EOF
}



##########################
#
#         Vultr
#
##########################

env_vultr() {
    # Install Vultr Driver: https://github.com/janeczku/docker-machine-vultr

    # Vultr Regions
    # DCID	NAME		CONTINENT	    COUNTRY		STATE	STORAGE		CODE
    # 40    Singapore   Asia            SG          false       SGP
    # 25    Tokyo       Asia            JP          false       NRT
    # 19    Sydney      Australia       AU          false       SYD
    # 7     Amsterdam	Europe		    NL			false		AMS
    # 9     Frankfurt	Europe		    DE			false		FRA
    # 8     London		Europe		    GB			false		LHR
    # 24    Paris		Europe		    FR			false		CDG
    # 6     Atlanta		North America   US		GA	false		ATL
    # 2     Chicago		North America   US		IL	false		ORD
    # 3     Dallas		North America   US		TX	false		DFW
    # 5     Los Angeles	North America   US		CA	false		LAX
    # 39    Miami		North America   US		FL	false		MIA
    # 1     New Jersey	North America   US		NJ	true		EWR
    # 4     Seattle		North America   US		WA	false		SEA
    # 12    Silicon Valley	North America	US	CA	false		SJC

    # Vultr Plans
    # https://api.vultr.com/v1/plans/list?type=vc2
    # 201       1024 MB RAM,25 GB SSD,1.00 TB BW - $5/month
    # 400		1024 MB RAM,32 GB SSD,1.00 TB BW	1	1024	32	1.00		6.00
    # 202       2048 MB RAM,40 GB SSD,2.00 TB BW	1	2048	40	2.00		10.00
    # 203       4096 MB RAM,60 GB SSD,3.00 TB BW	2	4096	60	3.00		20.00

    # Vultr OS
    # 160 - Ubuntu 14.04 x64
    # 215 - Ubuntu 16.04 x64
    # 270 - Ubuntu 18.04 x64
    # 167 - CentOS 7 x64

    # IPv6
    # export VULTR_IPV6=true

    cat <<EOF
    export MACHINE_DRIVER=vultr

    export VULTR_API_KEY=${VULTR_API_KEY}
    export VULTR_REGION=19
    export VULTR_PLAN=400
    export VULTR_OS=270
EOF
}

usage() {
    cat <<EOF
Usage:

    eval \$($0 <provider>)

Provider:

    ali         阿里云
    aws         Amazon Web Service
    azure       微软 Azure 云
    do          Digital Ocean
    google      Google Compute Engine
    qingcloud   青云
    rackspace   Rackspace
    vultr       Vultr

EOF
}

##########################
#
#       入口函数
#
##########################

main() {
    local command=$1
    shift
    case "$command" in
        ali)        env_aliyun ;;
        aws)        env_aws ;;
        azure)      env_azure ;;
        do)         env_digitalocean ;;
        google)     env_google ;;
        qingcloud)  env_qingcloud ;;
        rackspace)  env_rackspace ;;
        vultr)      env_vultr ;;
        *)          usage ;;
    esac
}

main $@